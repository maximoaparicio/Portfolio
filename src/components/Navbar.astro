---
import MenuToggle from "./MenuToggle.astro";
import ThemeToggle from "./ThemeToggle.astro";
import UppercaseToggle from "./UppercaseToggle.astro";
import LanguagePicker from "@/components/LanguagePicker.astro";
import { navItems } from "@/lib/index";

import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
} from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<header class="sticky sm:top-5 top-1 z-10" id="header-nav">
  <nav
    class="flex items-center flex-col sm:flex-row gap-2 sm:justify-between p-2 rounded"
  >
    <ul class="flex gap-x-4 items-center text-sm sm:text-base">
      <li>
        <a
          href={translatePath("/#experience")}
          class="sm:hover:text-aqua2 sm:dark:hover:text-aqua hover:duration-150"
        >
          {t("nav.experience")}
        </a>
      </li>
      <li>
        <a
          href={translatePath("/#projects")}
          class="sm:hover:text-aqua2 sm:dark:hover:text-aqua hover:duration-150"
        >
          {t("nav.projects")}
        </a>
      </li>
      <li>
        <a
          href={translatePath("/#about")}
          class="sm:hover:text-aqua2 sm:dark:hover:text-aqua hover:duration-150"
        >
          {t("nav.about")}
        </a>
      </li>
      <li>
        <a
          href="mailto:maximodipaparicio@gmail.com"
          class="sm:hover:text-aqua2 sm:dark:hover:text-aqua hover:duration-150"
        >
          {t("nav.contact")}
        </a>
      </li>
    </ul>
    <div class="flex items-center gap-x-5">
      <LanguagePicker />
      <UppercaseToggle />
      <ThemeToggle />
    </div>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("dark:text-aqua text-aqua2");
            } else {
              item.classList.remove("dark:text-aqua text-aqua2");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur bg-gray-300/60 dark:bg-gray-800/60 ring-white/10;
    }
  }
</style>
